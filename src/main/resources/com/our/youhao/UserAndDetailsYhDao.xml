<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.youhao.dao.UserAndDetailsYhDao">
	<!-- 配置查询结果集和DO对象的映射关系 -->
	<!-- <resultMap type="DepartmentInfoDO" id="departmentmap"> <id column="department_id" 
		property="departmentId"/>结果集中查询的department_id字段会被封装到DepartmentInfoDO对象的departmentId属性 
		<result column="department_name" property="departmentName"/> </resultMap> -->

	<!-- 1、查询user表的所有信息 -->
	<select id="getUserList" resultType="com.our.pojo.User">
		select * from user where
		user_delete = 0
	</select>

	<!-- 2、查询user_details表的所有信息 -->
	<select id="getUserDetailsList"
		resultType="com.our.pojo.User_details">
		select * from user_details
	</select>

	<!-- 3、根据user_id查询某一用户详细信息 -->
	<select id="getUserDetails" parameterType="int"
		resultType="com.our.pojo.User_details">
		select * from user_details where user_id = #{user_id}
	</select>

	<!-- 4、更新用户详情表中的icon和role -->
	<update id="updateUserDetails" parameterType="HashMap">
		<!-- update user_details
		set icon=#{icon},role=#{role} where user_details_id=#{udid} -->
		update user_details
		<set>
			<if test="role!=0">
				role=#{role},
			</if>
			<if test="icon !=null and icon != ''">
				icon=#{icon},
			</if>
		</set>
		where user_details_id=#{udid}
	</update>

	<!-- 5、更新用户表中的密码 -->
	<update id="updateUserPwd" parameterType="HashMap">
		update user set
		password=#{pwd} where user_id=#{user_id}
	</update>

	<!-- 6、通过user_id假删除用户 -->
	<update id="deleteUserByid" parameterType="int">
		update user set
		user_delete = 1 where user_id = #{user_id}
	</update>

	<!-- 7、在user表中查找user_id列的最大值 -->
	<select id="getMaxUserId" resultType="int">
		select max(user.user_id)
		from user;
	</select>

	<!-- 8、在user表中插入一条记录 -->
	<insert id="insertUser" parameterType="HashMap">
		insert into user (user_delete,user_id,user_name,password)
		values(#{user_delete},#{user_id},#{user_name},#{password})
	</insert>

	<!-- 9、在user_details表中插入一条数据 -->
	<insert id="insertUserDetails" parameterType="HashMap">
		insert into
		user_details (user_details_id,user_id,name,icon,role)
		values(#{user_details_id},#{user_id},#{name},#{icon},#{role})
	</insert>

	<!-- 10、通过user_name查找用户的删除状态 -->
	<select id="getUserByName" parameterType="String"
		resultType="com.our.pojo.User">
		select * from user where user_name=#{userName}
	</select>

</mapper>